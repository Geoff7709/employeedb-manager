{"version":3,"sources":["utils/EmployeeContext.js","components/EmployeeCard.js","pages/Search.js","pages/Roster.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeContext","createContext","EmployeeCard","roster","useContext","map","employee","className","src","picture","large","alt","name","first","last","login","username","location","country","email","uuid","Search","useState","setRoster","fetchEmployeeByLoc","a","axios","data","results","console","log","compare","b","nameA","nameB","comparison","sortedResults","sort","filteredResults","filter","result","nat","error","for","id","onChange","e","searchNat","target","value","Provider","Roster","Navbar","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","to","App","useEffect","fetchEmployeeRoster","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a1b4d94.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst EmployeeContext = createContext([])\r\n// const EmployeeContext = createContext([{}])\r\nexport default EmployeeContext","import React, { useContext } from 'react'\r\nimport EmployeeContext from '../utils/EmployeeContext'\r\n\r\n\r\nfunction EmployeeCard() {\r\n    const roster = useContext(EmployeeContext)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                roster.map(employee => {\r\n                    return (<div className='col-md-4' key={employee.login.uuid}>\r\n                        <div className=\"card mb-3\">\r\n                            <div >\r\n                                <img src={employee.picture.large} alt={`${employee.name.first} ${employee.name.last}`} />\r\n                                <div >\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{`${employee.name.first} ${employee.name.last}`}</h5>\r\n                                        <p className=\"card-text\">Login: {employee.login.username}</p>\r\n                                        <p className=\"card-text\">Location: {employee.location.country}</p>\r\n                                        <p className=\"card-text\">Email: {employee.email}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div >\r\n                    </div>)\r\n                })\r\n            }\r\n        </div>)\r\n}\r\n\r\nexport default EmployeeCard","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport EmployeeCard from '../components/EmployeeCard'\r\nimport EmployeeContext from '../utils/EmployeeContext'\r\n\r\nfunction Search() {\r\n  const [roster, setRoster] = useState([])\r\n\r\n\r\n  const fetchEmployeeByLoc = async (country) => {\r\n    try {\r\n      const { data } = await axios('https://randomuser.me/api/?seed=oidg&results=100&nat=FR,GB,IE,NO,NL,NZ,TR,US')\r\n      const results = data.results\r\n      console.log(results)\r\n      const compare = (a, b) => {\r\n        const nameA = a.name.last\r\n        const nameB = b.name.last\r\n\r\n        let comparison = 0;\r\n        if (nameA > nameB) {\r\n          comparison = 1;\r\n        } else if (nameA < nameB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n      }\r\n      const sortedResults = results.sort(compare)\r\n      const filteredResults = sortedResults.filter((result) => result.nat === country)\r\n      console.log(filteredResults)\r\n      setRoster(filteredResults)\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n   const handleSelect = (e) => {\r\n     let searchNat = e.target.value\r\n     fetchEmployeeByLoc(searchNat) \r\n   }\r\n  return (\r\n    <div>\r\n      <div className='container'>\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <label className=\"input-group-text\" for=\"inputGroupSelect01\">Options</label>\r\n            <select className=\"form-select\" id=\"inputGroupSelect01\" onChange={handleSelect} >\r\n              <option >Search By Country</option>\r\n              <option value=\"FR\">France</option>\r\n              <option value=\"GB\">Great Britain</option>\r\n              <option value=\"IE\">Ireland</option>\r\n              <option value=\"NO\">Norway</option>\r\n              <option value=\"NL\">Netherlands</option>\r\n              <option value=\"NZ\">New Zealand</option>\r\n              <option value=\"TR\">Turkey</option>\r\n              <option value=\"US\">United States</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <EmployeeContext.Provider value={roster}>\r\n        <EmployeeCard />\r\n      </EmployeeContext.Provider>\r\n    </div>\r\n  )\r\n}\r\nexport default Search","import React from 'react'\r\nimport EmployeeCard from '../components/EmployeeCard'\r\n\r\nfunction Roster() {\r\n    \r\n    return (\r\n        // <div>\r\n        // <h2>Employee Roster</h2>\r\n        // </div>\r\n        <div className='container'>\r\n        <div className='row'>\r\n        <EmployeeCard />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Roster","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <h2 className=\"navbar-brand\">Navbar</h2>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to='/'>Roster</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to='/search'>Search</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import React, { useEffect, useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport axios from 'axios'\nimport Search from './pages/Search'\nimport Roster from './pages/Roster'\nimport Navbar from './components/Navbar'\nimport './App.css'\nimport EmployeeContext from './utils/EmployeeContext'\n\nfunction App() {\n  const [roster, setRoster] = useState([])\n  // const [employeeState, setEmployeeState] = useState({\n\n  // })\n  useEffect(() => {\n    fetchEmployeeRoster()\n  }, [])\n  const fetchEmployeeRoster = async () => {\n    try {\n      const { data } = await axios('https://randomuser.me/api/?seed=oidg&results=100&nat=FR,GB,IE,NO,NL,NZ,TR,US')\n      const results = data.results\n      console.log(results)\n      const compare = (a, b) => {\n        const nameA = a.name.last\n        const nameB = b.name.last\n\n        let comparison = 0;\n        if (nameA > nameB) {\n          comparison = 1;\n        } else if (nameA < nameB) {\n          comparison = -1;\n        }\n        return comparison;\n      }\n      const sortedResults = results.sort(compare)\n      console.log(sortedResults)\n      setRoster(sortedResults)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n\n\n  return (\n    <div className='App'>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/search'>\n            <Search />\n          </Route>\n          <EmployeeContext.Provider value={roster}>\n            <Route path='/'>\n              <Roster />\n            </Route>\n          </EmployeeContext.Provider>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}